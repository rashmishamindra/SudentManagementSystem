/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interf;

import com.mysql.jdbc.Connection;
import connection.DBConnect;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Date;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author Rashmi Muthisnghe
 */
public class paymentDetails extends javax.swing.JFrame {

    Connection conn = null;
    ResultSet rs = null;
    PreparedStatement pst = null;
    ResultSet rs1 = null;
    PreparedStatement pst1 = null;
//    JCheckBox c1,c2;
       
    /**
     * Creates new form paymentDetails
     */
    public paymentDetails() {
        initComponents();
        conn = DBConnect.connect();
        fillcombo();
        setdate();
        ComboBox_month.setVisible(false);
        ComboBox_teacher.setVisible(false);
        ComboBox_grade.setVisible(false);
        TextField_student.setVisible(false);
        jScrollPane2.setVisible(false);
        List_student.setVisible(false);
        jLabel8.setVisible(false);
        jLabel2.setVisible(false);
        jLabel3.setVisible(false);
        jLabel4.setVisible(false);
        // size of jfram
        this.setExtendedState(JFrame.MAXIMIZED_BOTH);
    }
    
    private void setdate(){
        new Thread(new Runnable() {

            public void run() {
              //  throw new UnsupportedOperationException("Not supported yet.");
                
                while(true){
                    
                   Date d=new Date();
                   String date=d.toString();
                   String arr[]=date.split(" ");
                   String dd=arr[5]+"/"+arr[1]+"/"+arr[2];
                   lbldate.setText(dd);
                   
                   lbltime.setText(arr[3]);
                    
                }
            }
        }).start();
    }
    
    private void fillcombo(){
        String sql = "SELECT CONCAT(fname,' ',lname)AS name FROM teacher";
        try{
            pst = conn.prepareStatement(sql);
            rs = pst.executeQuery();
            
            while(rs.next()){
                String name = rs.getString("name");
                ComboBox_teacher.addItem(name);
            }
        }
        catch(Exception e){
          System.out.print("Exception is trows "+ e);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Table_paymentdetails = new javax.swing.JTable();
        TextField_student = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        ComboBox_grade = new javax.swing.JComboBox<>();
        Button_home1 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel6 = new javax.swing.JLabel();
        ComboBox_teacher = new javax.swing.JComboBox<>();
        ComboBox_month = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jCheckBox3 = new javax.swing.JCheckBox();
        jCheckBox4 = new javax.swing.JCheckBox();
        jScrollPane2 = new javax.swing.JScrollPane();
        List_student = new javax.swing.JList<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        lbldate2 = new javax.swing.JLabel();
        lbldate11 = new javax.swing.JLabel();
        lbltime = new javax.swing.JLabel();
        lbldate = new javax.swing.JLabel();
        jYearChooser1 = new com.toedter.calendar.JYearChooser();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("DMIMS");
        setMinimumSize(new java.awt.Dimension(1385, 754));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 48)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("PAYMENT DETAILS");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(442, 35, -1, -1));

        Table_paymentdetails.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Student_Name", "Subject", "Teacher_Name", "Class_No", "Grade", "Month", "Price", "Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(Table_paymentdetails);
        if (Table_paymentdetails.getColumnModel().getColumnCount() > 0) {
            Table_paymentdetails.getColumnModel().getColumn(0).setResizable(false);
            Table_paymentdetails.getColumnModel().getColumn(1).setResizable(false);
            Table_paymentdetails.getColumnModel().getColumn(2).setResizable(false);
            Table_paymentdetails.getColumnModel().getColumn(3).setResizable(false);
            Table_paymentdetails.getColumnModel().getColumn(4).setResizable(false);
            Table_paymentdetails.getColumnModel().getColumn(5).setResizable(false);
            Table_paymentdetails.getColumnModel().getColumn(6).setResizable(false);
            Table_paymentdetails.getColumnModel().getColumn(7).setResizable(false);
        }

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(612, 148, 680, 520));

        TextField_student.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                TextField_studentKeyReleased(evt);
            }
        });
        getContentPane().add(TextField_student, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 330, 310, -1));

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/a (4).png"))); // NOI18N
        jButton1.setText("Search");
        jButton1.setBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.black, java.awt.Color.white));
        jButton1.setBorderPainted(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 470, 165, 54));

        ComboBox_grade.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13" }));
        ComboBox_grade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboBox_gradeActionPerformed(evt);
            }
        });
        getContentPane().add(ComboBox_grade, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 290, 310, -1));

        Button_home1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        Button_home1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/home-icon (1).png"))); // NOI18N
        Button_home1.setText("Menu");
        Button_home1.setToolTipText("Go to Menu");
        Button_home1.setBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.black, java.awt.Color.white));
        Button_home1.setBorderPainted(false);
        Button_home1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button_home1ActionPerformed(evt);
            }
        });
        getContentPane().add(Button_home1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1000, 50, 132, 50));

        jButton8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Key_30px.png"))); // NOI18N
        jButton8.setText("Log Out");
        jButton8.setToolTipText("Log Out");
        jButton8.setBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.black, java.awt.Color.white));
        jButton8.setBorderPainted(false);
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton8, new org.netbeans.lib.awtextra.AbsoluteConstraints(1150, 50, 134, 49));

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/a (1).png"))); // NOI18N
        jButton2.setToolTipText("Close This");
        jButton2.setBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.black, java.awt.Color.white));
        jButton2.setBorderPainted(false);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(1290, 50, 43, 49));
        getContentPane().add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(45, 112, 1291, 10));

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/payment (1).png"))); // NOI18N
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 540, 313, 170));

        ComboBox_teacher.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "" }));
        ComboBox_teacher.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboBox_teacherActionPerformed(evt);
            }
        });
        getContentPane().add(ComboBox_teacher, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 250, 310, -1));

        ComboBox_month.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "", "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));
        ComboBox_month.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboBox_monthActionPerformed(evt);
            }
        });
        getContentPane().add(ComboBox_month, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 210, 310, -1));

        jLabel8.setText("jLabel8");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 250, -1, -1));

        jCheckBox1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jCheckBox1.setForeground(new java.awt.Color(255, 255, 255));
        jCheckBox1.setText("Month");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });
        getContentPane().add(jCheckBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 210, 100, -1));

        jCheckBox2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jCheckBox2.setForeground(new java.awt.Color(255, 255, 255));
        jCheckBox2.setText("Teacher");
        jCheckBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox2ActionPerformed(evt);
            }
        });
        getContentPane().add(jCheckBox2, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 250, 100, -1));

        jCheckBox3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jCheckBox3.setForeground(new java.awt.Color(255, 255, 255));
        jCheckBox3.setText("Grade");
        jCheckBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox3ActionPerformed(evt);
            }
        });
        getContentPane().add(jCheckBox3, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 290, 100, -1));

        jCheckBox4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jCheckBox4.setForeground(new java.awt.Color(255, 255, 255));
        jCheckBox4.setText("Student");
        jCheckBox4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox4ActionPerformed(evt);
            }
        });
        getContentPane().add(jCheckBox4, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 330, 100, -1));

        List_student.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                List_studentMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(List_student);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 360, 310, 80));

        jLabel2.setText("jLabel2");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 330, -1, -1));

        jLabel3.setText("jLabel3");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 290, -1, -1));

        jLabel4.setText("jLabel4");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 210, -1, -1));

        lbldate2.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        lbldate2.setForeground(new java.awt.Color(255, 255, 255));
        lbldate2.setText("Date :");
        getContentPane().add(lbldate2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 30, -1, -1));

        lbldate11.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        lbldate11.setForeground(new java.awt.Color(255, 255, 255));
        lbldate11.setText("Time :");
        getContentPane().add(lbldate11, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 70, -1, -1));

        lbltime.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        lbltime.setForeground(new java.awt.Color(255, 255, 255));
        getContentPane().add(lbltime, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 70, 140, 30));

        lbldate.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        lbldate.setForeground(new java.awt.Color(255, 255, 255));
        getContentPane().add(lbldate, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 30, 140, 30));
        getContentPane().add(jYearChooser1, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 170, 90, -1));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Year");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 170, 60, -1));

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/blue-bg (2).jpg"))); // NOI18N
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1390, 770));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try{
            if(jCheckBox1.isSelected()==true && jCheckBox2.isSelected()== false && jCheckBox3.isSelected()== false && jCheckBox4.isSelected()== false){
               String year = jYearChooser1.getYear()+"-";
               String month = ComboBox_month.getSelectedItem().toString();
               String sql = "SELECT CONCAT(s.fname,' ',s.mname,' ',s.lname) AS Student_Name, sub.subject AS Subject, CONCAT(t.fname,' ',t.lname)AS Teacher_Name,c.classNo as Class_No, c.grade as Grade, p.month AS Month, c.price as Price, p.date as Date FROM payment p,student s, subject sub, teacher t, class c, entrollment e WHERE p.month ='"+month+"'  AND s.sno=e.sid AND t.tno=c.Teacher AND c.classNo=e.cid AND sub.subNo=c.subject AND e.eNo=p.eId AND p.date like '"+year+"%'  ";
               pst = conn.prepareStatement(sql);
               rs = pst.executeQuery();
               Table_paymentdetails.setModel(DbUtils.resultSetToTableModel(rs));
            }
            else if(jCheckBox1.isSelected()==false && jCheckBox2.isSelected()== true && jCheckBox3.isSelected()== false && jCheckBox4.isSelected()== false){
               String year = jYearChooser1.getYear()+"-";
               String teacher = jLabel8.getText();
               String sql = "SELECT CONCAT(s.fname,' ',s.mname,' ',s.lname) AS Student_Name, sub.subject AS Subject, CONCAT(t.fname,' ',t.lname)AS Teacher_Name,c.classNo as Class_No, c.grade as Grade, p.month AS Month, c.price as Price, p.date as Date FROM payment p,student s, subject sub, teacher t, class c, entrollment e WHERE t.tno ='"+teacher+"'  AND s.sno=e.sid AND t.tno=c.Teacher AND c.classNo=e.cid AND sub.subNo=c.subject AND e.eNo=p.eId AND p.date like '"+year+"%'  ";
               pst = conn.prepareStatement(sql);
               rs = pst.executeQuery();
               Table_paymentdetails.setModel(DbUtils.resultSetToTableModel(rs));
            }
            else if(jCheckBox1.isSelected()==false && jCheckBox2.isSelected()== false && jCheckBox3.isSelected()== true && jCheckBox4.isSelected()== false){
               String year = jYearChooser1.getYear()+"-";
               String grade = ComboBox_grade.getSelectedItem().toString();
               String sql = "SELECT CONCAT(s.fname,' ',s.mname,' ',s.lname) AS Student_Name, sub.subject AS Subject, CONCAT(t.fname,' ',t.lname)AS Teacher_Name,c.classNo as Class_No, c.grade as Grade, p.month AS Month, c.price as Price, p.date as Date FROM payment p,student s, subject sub, teacher t, class c, entrollment e WHERE c.grade ='"+grade+"'  AND s.sno=e.sid AND t.tno=c.Teacher AND c.classNo=e.cid AND sub.subNo=c.subject AND e.eNo=p.eId AND p.date like '"+year+"%'  ";
               pst = conn.prepareStatement(sql);
               rs = pst.executeQuery();
               Table_paymentdetails.setModel(DbUtils.resultSetToTableModel(rs));
            }
            else if(jCheckBox1.isSelected()==false && jCheckBox2.isSelected()== false && jCheckBox3.isSelected()== false && jCheckBox4.isSelected()== true){
               String year = jYearChooser1.getYear()+"-";
               String student = jLabel2.getText();
               String sql = "SELECT CONCAT(s.fname,' ',s.mname,' ',s.lname) AS Student_Name, sub.subject AS Subject, CONCAT(t.fname,' ',t.lname)AS Teacher_Name,c.classNo as Class_No, c.grade as Grade, p.month AS Month, c.price as Price, p.date as Date FROM payment p,student s, subject sub, teacher t, class c, entrollment e WHERE s.sno ='"+student+"'  AND s.sno=e.sid AND t.tno=c.Teacher AND c.classNo=e.cid AND sub.subNo=c.subject AND e.eNo=p.eId AND p.date like '"+year+"%'  ";
               pst = conn.prepareStatement(sql);
               rs = pst.executeQuery();
               Table_paymentdetails.setModel(DbUtils.resultSetToTableModel(rs));
            }
            else if(jCheckBox1.isSelected()==true && jCheckBox2.isSelected()== true && jCheckBox3.isSelected()== false && jCheckBox4.isSelected()== false){
               String year = jYearChooser1.getYear()+"-";
               String month = ComboBox_month.getSelectedItem().toString();
               String teacher = jLabel8.getText();
               String sql = "SELECT CONCAT(s.fname,' ',s.mname,' ',s.lname) AS Student_Name, sub.subject AS Subject, CONCAT(t.fname,' ',t.lname)AS Teacher_Name,c.classNo as Class_No, c.grade as Grade, p.month AS Month, c.price as Price, p.date as Date FROM payment p,student s, subject sub, teacher t, class c, entrollment e WHERE p.month ='"+month+"' AND t.tno ='"+teacher+"'  AND s.sno=e.sid AND t.tno=c.Teacher AND c.classNo=e.cid AND sub.subNo=c.subject AND e.eNo=p.eId AND p.date like '"+year+"%'  ";
               pst = conn.prepareStatement(sql);
               rs = pst.executeQuery();
               Table_paymentdetails.setModel(DbUtils.resultSetToTableModel(rs));
            }
            else if(jCheckBox1.isSelected()== true && jCheckBox3.isSelected()==true && jCheckBox4.isSelected()== false && jCheckBox2.isSelected()== false ){
               String year = jYearChooser1.getYear()+"-";
               String month = jLabel4.getText();
               String grade = jLabel3.getText();
               String sql = "SELECT CONCAT(s.fname,' ',s.mname,' ',s.lname) AS Student_Name, sub.subject AS Subject, CONCAT(t.fname,' ',t.lname)AS Teacher_Name,c.classNo as Class_No, c.grade as Grade, p.month AS Month, c.price as Price, p.date as Date FROM payment p,student s, subject sub, teacher t, class c, entrollment e WHERE p.month ='"+month+"' AND c.grade ='"+grade+"'  AND s.sno=e.sid AND t.tno=c.Teacher AND c.classNo=e.cid AND sub.subNo=c.subject AND e.eNo=p.eId AND p.date like '"+year+"%'  ";
               pst = conn.prepareStatement(sql);
               rs = pst.executeQuery();
               Table_paymentdetails.setModel(DbUtils.resultSetToTableModel(rs));
            }
            else if(jCheckBox1.isSelected()==false && jCheckBox2.isSelected()== true && jCheckBox3.isSelected()== true && jCheckBox4.isSelected()== false){
               String year = jYearChooser1.getYear()+"-";
               String teacher = jLabel8.getText();
               String grade = ComboBox_grade.getSelectedItem().toString();
               String sql = "SELECT CONCAT(s.fname,' ',s.mname,' ',s.lname) AS Student_Name, sub.subject AS Subject, CONCAT(t.fname,' ',t.lname)AS Teacher_Name,c.classNo as Class_No, c.grade as Grade, p.month AS Month, c.price as Price, p.date as Date FROM payment p,student s, subject sub, teacher t, class c, entrollment e WHERE t.tno ='"+teacher+"' AND c.grade ='"+grade+"'  AND s.sno=e.sid AND t.tno=c.Teacher AND c.classNo=e.cid AND sub.subNo=c.subject AND e.eNo=p.eId AND p.date like '"+year+"%'  ";
               pst = conn.prepareStatement(sql);
               rs = pst.executeQuery();
               Table_paymentdetails.setModel(DbUtils.resultSetToTableModel(rs));
            }
            else if(jCheckBox1.isSelected()==true && jCheckBox2.isSelected()== false && jCheckBox3.isSelected()== false && jCheckBox4.isSelected()== true){
               String year = jYearChooser1.getYear()+"-";
               String month = ComboBox_month.getSelectedItem().toString();
               String student = jLabel2.getText();
               String sql = "SELECT CONCAT(s.fname,' ',s.mname,' ',s.lname) AS Student_Name, sub.subject AS Subject, CONCAT(t.fname,' ',t.lname)AS Teacher_Name,c.classNo as Class_No, c.grade as Grade, p.month AS Month, c.price as Price, p.date as Date FROM payment p,student s, subject sub, teacher t, class c, entrollment e WHERE p.month ='"+month+"' AND s.sno ='"+student+"'  AND s.sno=e.sid AND t.tno=c.Teacher AND c.classNo=e.cid AND sub.subNo=c.subject AND e.eNo=p.eId AND p.date like '"+year+"%'  ";
               pst = conn.prepareStatement(sql);
               rs = pst.executeQuery();
               Table_paymentdetails.setModel(DbUtils.resultSetToTableModel(rs));
            }
            else if(jCheckBox1.isSelected()==false && jCheckBox2.isSelected()== true && jCheckBox3.isSelected()== false && jCheckBox4.isSelected()== true){
               String year = jYearChooser1.getYear()+"-";
               String teacher = jLabel8.getText();
               String student = jLabel2.getText();
               String sql = "SELECT CONCAT(s.fname,' ',s.mname,' ',s.lname) AS Student_Name, sub.subject AS Subject, CONCAT(t.fname,' ',t.lname)AS Teacher_Name,c.classNo as Class_No, c.grade as Grade, p.month AS Month, c.price as Price, p.date as Date FROM payment p,student s, subject sub, teacher t, class c, entrollment e WHERE t.tno ='"+teacher+"' AND s.sno ='"+student+"'  AND s.sno=e.sid AND t.tno=c.Teacher AND c.classNo=e.cid AND sub.subNo=c.subject AND e.eNo=p.eId AND p.date like '"+year+"%'  ";
               pst = conn.prepareStatement(sql);
               rs = pst.executeQuery();
               Table_paymentdetails.setModel(DbUtils.resultSetToTableModel(rs));
            }
            else if(jCheckBox1.isSelected()==false && jCheckBox2.isSelected()== false && jCheckBox3.isSelected()== true && jCheckBox4.isSelected()== true){
               String year = jYearChooser1.getYear()+"-";
               String grade = ComboBox_grade.getSelectedItem().toString();
               String student = jLabel2.getText();
               String sql = "SELECT CONCAT(s.fname,' ',s.mname,' ',s.lname) AS Student_Name, sub.subject AS Subject, CONCAT(t.fname,' ',t.lname)AS Teacher_Name,c.classNo as Class_No, c.grade as Grade, p.month AS Month, c.price as Price, p.date as Date FROM payment p,student s, subject sub, teacher t, class c, entrollment e WHERE c.grade ='"+grade+"' AND s.sno ='"+student+"'  AND s.sno=e.sid AND t.tno=c.Teacher AND c.classNo=e.cid AND sub.subNo=c.subject AND e.eNo=p.eId AND p.date like '"+year+"%'  ";
               pst = conn.prepareStatement(sql);
               rs = pst.executeQuery();
               Table_paymentdetails.setModel(DbUtils.resultSetToTableModel(rs));
            }
            else if(jCheckBox1.isSelected()==true && jCheckBox2.isSelected()== true && jCheckBox3.isSelected()== true && jCheckBox4.isSelected()== false){
               String year = jYearChooser1.getYear()+"-";
               String month = ComboBox_month.getSelectedItem().toString();
               String teacher = jLabel8.getText();
               String grade = ComboBox_grade.getSelectedItem().toString();
               String sql = "SELECT CONCAT(s.fname,' ',s.mname,' ',s.lname) AS Student_Name, sub.subject AS Subject, CONCAT(t.fname,' ',t.lname)AS Teacher_Name,c.classNo as Class_No, c.grade as Grade, p.month AS Month, c.price as Price, p.date as Date FROM payment p,student s, subject sub, teacher t, class c, entrollment e WHERE p.month = '"+month+"' AND t.tno ='"+teacher+"' AND c.grade ='"+grade+"'  AND s.sno=e.sid AND t.tno=c.Teacher AND c.classNo=e.cid AND sub.subNo=c.subject AND e.eNo=p.eId AND p.date like '"+year+"%'  ";
               pst = conn.prepareStatement(sql);
               rs = pst.executeQuery();
               Table_paymentdetails.setModel(DbUtils.resultSetToTableModel(rs));
            }
            else if(jCheckBox1.isSelected()==true && jCheckBox2.isSelected()== true && jCheckBox3.isSelected()== false && jCheckBox4.isSelected()== true){
               String year = jYearChooser1.getYear()+"-";
               String month = ComboBox_month.getSelectedItem().toString();
               String teacher = jLabel8.getText();
               String student = jLabel2.getText();
               String sql = "SELECT CONCAT(s.fname,' ',s.mname,' ',s.lname) AS Student_Name, sub.subject AS Subject, CONCAT(t.fname,' ',t.lname)AS Teacher_Name,c.classNo as Class_No, c.grade as Grade, p.month AS Month, c.price as Price, p.date as Date FROM payment p,student s, subject sub, teacher t, class c, entrollment e WHERE p.month = '"+month+"' AND t.tno ='"+teacher+"' AND s.sno ='"+student+"'  AND s.sno=e.sid AND t.tno=c.Teacher AND c.classNo=e.cid AND sub.subNo=c.subject AND e.eNo=p.eId AND p.date like '"+year+"%'  ";
               pst = conn.prepareStatement(sql);
               rs = pst.executeQuery();
               Table_paymentdetails.setModel(DbUtils.resultSetToTableModel(rs));
            }
            else if(jCheckBox1.isSelected()==true && jCheckBox2.isSelected()== false && jCheckBox3.isSelected()== true && jCheckBox4.isSelected()== true){
               String year = jYearChooser1.getYear()+"-";
               String month = ComboBox_month.getSelectedItem().toString();
               String grade = ComboBox_grade.getSelectedItem().toString();
               String student = jLabel2.getText();
               String sql = "SELECT CONCAT(s.fname,' ',s.mname,' ',s.lname) AS Student_Name, sub.subject AS Subject, CONCAT(t.fname,' ',t.lname)AS Teacher_Name,c.classNo as Class_No, c.grade as Grade, p.month AS Month, c.price as Price, p.date as Date FROM payment p,student s, subject sub, teacher t, class c, entrollment e WHERE p.month = '"+month+"' AND c.grade='"+grade+"' AND s.sno ='"+student+"'  AND s.sno=e.sid AND t.tno=c.Teacher AND c.classNo=e.cid AND sub.subNo=c.subject AND e.eNo=p.eId AND p.date like '"+year+"%'  ";
               pst = conn.prepareStatement(sql);
               rs = pst.executeQuery();
               Table_paymentdetails.setModel(DbUtils.resultSetToTableModel(rs));
            }
            else if(jCheckBox1.isSelected()==false && jCheckBox2.isSelected()== true && jCheckBox3.isSelected()== true && jCheckBox4.isSelected()== true){
               String year = jYearChooser1.getYear()+"-";
               String teacher = jLabel8.getText();
               String grade = ComboBox_grade.getSelectedItem().toString();
               String student = jLabel2.getText();
               String sql = "SELECT CONCAT(s.fname,' ',s.mname,' ',s.lname) AS Student_Name, sub.subject AS Subject, CONCAT(t.fname,' ',t.lname)AS Teacher_Name,c.classNo as Class_No, c.grade as Grade, p.month AS Month, c.price as Price, p.date as Date FROM payment p,student s, subject sub, teacher t, class c, entrollment e WHERE t.tno = '"+teacher+"' AND c.grade='"+grade+"' AND s.sno ='"+student+"'  AND s.sno=e.sid AND t.tno=c.Teacher AND c.classNo=e.cid AND sub.subNo=c.subject AND e.eNo=p.eId AND p.date like '"+year+"%'  ";
               pst = conn.prepareStatement(sql);
               rs = pst.executeQuery();
               Table_paymentdetails.setModel(DbUtils.resultSetToTableModel(rs));
            }
            else if(jCheckBox1.isSelected()==true && jCheckBox2.isSelected()== true && jCheckBox3.isSelected()== true && jCheckBox4.isSelected()== true){
               String year = jYearChooser1.getYear()+"-";
               String month = ComboBox_month.getSelectedItem().toString();
               String teacher = jLabel8.getText();
               String grade = ComboBox_grade.getSelectedItem().toString();
               String student = jLabel2.getText();
               String sql = "SELECT CONCAT(s.fname,' ',s.mname,' ',s.lname) AS Student_Name, sub.subject AS Subject, CONCAT(t.fname,' ',t.lname)AS Teacher_Name,c.classNo as Class_No, c.grade as Grade, p.month AS Month, c.price as Price, p.date as Date FROM payment p,student s, subject sub, teacher t, class c, entrollment e WHERE p.month = '"+month+"' AND t.tno = '"+teacher+"' AND c.grade='"+grade+"' AND s.sno ='"+student+"'  AND s.sno=e.sid AND t.tno=c.Teacher AND c.classNo=e.cid AND sub.subNo=c.subject AND e.eNo=p.eId AND p.date like '"+year+"%'  ";
               pst = conn.prepareStatement(sql);
               rs = pst.executeQuery();
               Table_paymentdetails.setModel(DbUtils.resultSetToTableModel(rs));
            }
            else{
                JOptionPane.showMessageDialog(null, "Please enter what you want to search...");
            }
            
        }
        catch(Exception e){
            System.out.println(e);
        }
        
//        String month = ComboBox_month.getSelectedItem().toString();
//        String teacher = jLabel8.getText();
//        String student = TextField_student.getText();
//        String grade = ComboBox_grade.getSelectedItem().toString();
//        String sql = "SELECT CONCAT(s.fname,' ',s.mname,' ',s.lname) AS Student_Name, sub.subject, CONCAT(t.fname,' ',t.lname)AS Teacher_Name,c.classNo, c.grade, p.month, c.price, p.date FROM payment p,student s, subject sub, teacher t, class c, entrollment e WHERE p.month ='"+month+"' AND t.tno='"+teacher+"' AND s.fname LIKE '%"+student+"%' AND c.grade='"+grade+"'  AND s.sno=e.sid AND t.tno=c.Teacher AND c.classNo=e.cid AND sub.subNo=c.subject AND e.eNo=p.eId  ";
//        
//        try{
//        pst = conn.prepareStatement(sql);
//        rs = pst.executeQuery();
////        Vector v = new Vector();
////        while(rs.next()){
////                v.add(rs.getString("fname")+" "+rs.getString("mname")+" "+rs.getString("lname"));
////        }
//        Table_paymentdetails.setModel(DbUtils.resultSetToTableModel(rs));
//        }
//        catch(Exception e){
//          System.out.print("Exception is trows "+ e);
//      }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void Button_home1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button_home1ActionPerformed
        main m = new main();
        m.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_Button_home1ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        login l = new login();
        l.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void ComboBox_teacherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboBox_teacherActionPerformed
        String ft = ComboBox_teacher.getSelectedItem().toString().split(" ")[0];
        String lt = ComboBox_teacher.getSelectedItem().toString().split(" ")[1];
        System.out.println(ft+" "+lt);
        String sql = "SELECT `tno` FROM `teacher` WHERE fname='"+ft+"' AND lname='"+lt+"' ";
        try {
            pst = conn.prepareStatement(sql);
            rs = pst.executeQuery();
            while(rs.next()){
                String id = rs.getString("tno");
                jLabel8.setText(id);
            }
            
        } catch (SQLException ex) {
            Logger.getLogger(teacher.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_ComboBox_teacherActionPerformed

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        type = "Month";
        if(jCheckBox1.isSelected()){
        ComboBox_month.setVisible(true);
        }
        else{
            ComboBox_month.setVisible(false);
        }
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void jCheckBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox2ActionPerformed
        type = "Teacher";
        if(jCheckBox2.isSelected()){
            ComboBox_teacher.setVisible(true);
        }
        else{
            ComboBox_teacher.setVisible(false);
        }
    }//GEN-LAST:event_jCheckBox2ActionPerformed

    private void jCheckBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox3ActionPerformed
        type = "Grade";
        if(jCheckBox3.isSelected()){
            ComboBox_grade.setVisible(true);
        }
        else{
            ComboBox_grade.setVisible(false);
        }
    }//GEN-LAST:event_jCheckBox3ActionPerformed

    private void TextField_studentKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TextField_studentKeyReleased
        try{
            String sql = "select * from student where fname like '"+TextField_student.getText()+"%' or mname like '"+TextField_student.getText()+"%' or lname like '"+TextField_student.getText()+"%'";
            Vector v = new Vector();
            pst = conn.prepareStatement(sql);
            rs = pst.executeQuery();
            while(rs.next()){
                v.add(rs.getString("fname")+" "+rs.getString("mname")+" "+rs.getString("lname"));
            }
            List_student.setListData(v);
        }
        catch(Exception e){
            System.out.println(e);
        }
    }//GEN-LAST:event_TextField_studentKeyReleased

    private void List_studentMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_List_studentMouseClicked
        try{
            String fn = List_student.getSelectedValue().toString().split(" ")[0];
            String mn = List_student.getSelectedValue().toString().split(" ")[1];
            String ln = List_student.getSelectedValue().toString().split(" ")[2];
            String sql = "select distinct fname, mname, lname,sno from student where fname='"+fn+"' AND mname='"+mn+"' AND lname='"+ln+"'";
            //Vector v = new Vector();
            pst = conn.prepareStatement(sql);
            rs = pst.executeQuery();
            while(rs.next()){
                TextField_student.setText(rs.getString("fname")+" "+rs.getString("mname")+" "+rs.getString("lname"));
                jLabel2.setText(rs.getString("sno"));
            }
            
        }
        catch(Exception e){
            System.out.println(e);
        }

    }//GEN-LAST:event_List_studentMouseClicked

    private void jCheckBox4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox4ActionPerformed
        type = "Student";
        
         if(jCheckBox4.isSelected()){
            TextField_student.setVisible(true);
            jScrollPane2.setVisible(true);
            List_student.setVisible(true);
        }
        else{
            TextField_student.setVisible(false);
            jScrollPane2.setVisible(false);
            List_student.setVisible(false);
        }
        
    }//GEN-LAST:event_jCheckBox4ActionPerformed

    private void ComboBox_gradeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboBox_gradeActionPerformed
        String grade = ComboBox_grade.getSelectedItem().toString();
        jLabel3.setText(grade);
    }//GEN-LAST:event_ComboBox_gradeActionPerformed

    private void ComboBox_monthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboBox_monthActionPerformed
        String month = ComboBox_month.getSelectedItem().toString();
        jLabel4.setText(month);
    }//GEN-LAST:event_ComboBox_monthActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(paymentDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(paymentDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(paymentDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(paymentDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new paymentDetails().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Button_home1;
    private javax.swing.JComboBox<String> ComboBox_grade;
    private javax.swing.JComboBox<String> ComboBox_month;
    private javax.swing.JComboBox<String> ComboBox_teacher;
    private javax.swing.JList<String> List_student;
    private javax.swing.JTable Table_paymentdetails;
    private javax.swing.JTextField TextField_student;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton8;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JCheckBox jCheckBox4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private com.toedter.calendar.JYearChooser jYearChooser1;
    private javax.swing.JLabel lbldate;
    private javax.swing.JLabel lbldate11;
    private javax.swing.JLabel lbldate2;
    private javax.swing.JLabel lbltime;
    // End of variables declaration//GEN-END:variables
    
    private String type;
    
    
}
